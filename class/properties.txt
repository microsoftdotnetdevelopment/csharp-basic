A property with only get accessor is Read only property.
A property with only set accessor is write only property.

Ex:1-
class employee
    {    
            int eid;
            string ename;
            
            public int employeeid 
            {          
            set
            {
                eid = value;
            }
            get
            {
                return eid;
            }
            }
            public string employeename
            {
            set
            {
                ename = value;
            }
            get
            {
                return ename;
            }
        }
        public void setemployee(int a,string b)
        {
            employeeid = a;
            employeename = b;
        }
} 
class programmer
{
   public static void Main(string[] args)
    {
        employee e = new employee();
        e.employeeid = 2;//set value
        Console.WriteLine(e.employeeid);//get value
    }
}

Ex:2-
class employee
    { 
            int eid;
            string ename;            
            public int employeeid
            {             
            set
            {
                eid = value;
            }
            get
            {
                return eid;
            }
            }
            public string employeename
            {
            set
            {
                ename = value;
            }
            get
            {
                return ename;
            }   
            }     
            public void setemployee(int a,string b)
            {
            employeeid = a;
            employeename = b;
            }
           public string getemployee
           {
           get
           {
            return ename+eid;
        }
    }
} 
    class programmer
{
   public static void Main(string[] args)
    {
        employee e = new employee();
        e.setemployee(2, "sunny");
        Console.WriteLine(e.getemployee);//read only value
    }
}
Ex:3-
using System;
 public class Car
{
     
    public Car() { }
    private string color;
    public string a
    {
        get
        {
            return color;
        }
        set
        {
            color = value;
        }
    }


}
class Program
{
    static void Main(string[] args)
    {
        Car car = new Car();

        car.a = "RED";
        Console.WriteLine(car.a);
    }
}
Ex:4-
using System;
class Employee
{
    //prop -> double tab
    int eid;
    string ename;

    //readr/write property
    public int EID
    {
        get
        {
            return eid;
        }
        set
        {
            eid = value;
        }
    }

    public string ENAME
    {
        get
        {
            return ename;
        }
        set
        {
            ename = value;
        }
    }


    //read property
    public string GetEmployee
    {
        get
        {
            string data = string.Format("Employee ID : {0} , Employee Name : {1}", eid, ename);
            return data;
        }
    }

    public DateTime GetTime
    {
        get
        {
            return DateTime.Now;
        }
    }

}
class Program
{
    //svm double tab
    static void Main(string[] args)
    {
        Employee emp = new Employee();
        emp.EID = 23;
        emp.ENAME = "Abhay";
        Console.WriteLine(emp.GetEmployee);
        Console.WriteLine(emp.GetTime);
    }
}
Ex:5-property2
using System;
class Employee
{
    int Age;
    public int EmpAge
    {
        get
        {
            return Age;
        }
        set
        {
            if (value>12)
                Age = value;

        }
    }
}
    class Program
    {
        //svm double tab
        static void Main(string[] args)
        {
            Employee emp = new Employee();
            emp.EmpAge = 10;
            Console.WriteLine(emp.EmpAge);
        }
    }

Ex:6-Property3
using System;
class Employee
{
    public int EmpID { get; set; }
    public int EmpAge { get; set; }

    public string EmpName { get; set; }

    public DateTime EmpDOJ { get; set; }


}
    class Program
    {
        //svm double tab
        static void Main(string[] args)
        {

        //first way
        Employee nitesh = new Employee { EmpID = 101, EmpName = "Nitesh", EmpAge = 21, EmpDOJ = new DateTime(2016, 11, 21) };
        Employee sakshi = new Employee { EmpID = 102, EmpName = "Sakshi", EmpAge = 22, EmpDOJ = new DateTime(2017, 12, 20) }; 



        //second way
        /*nitesh.EmpID = 101;
        nitesh.EmpAge = 21;
        nitesh.EmpName = "Nitesh";
        nitesh.EmpDOJ = new DateTime(2016, 11, 21);*/
         


        }
    }
Ex:7-Property4
using System;
class Employee
{
    public int EmpID { get; set; }
    public int EmpAge { get; set; }

    public string EmpName { get; set; }

    public DateTime EmpDOJ { get; set; }


}
    class Program
    {
        //svm double tab
        static void Main(string[] args)
        {

        //first way
        Employee[] emloyees = new Employee[2];

        Employee nitesh = new Employee { EmpID = 101, EmpName = "Nitesh", EmpAge = 21, EmpDOJ = new DateTime(2016, 11, 21) };
        Employee sakshi = new Employee { EmpID = 102, EmpName = "Sakshi", EmpAge = 22, EmpDOJ = new DateTime(2017, 12, 20) };

        emloyees[0] = nitesh;
        emloyees[1] = sakshi;

        //second way
        /*nitesh.EmpID = 101;
        nitesh.EmpAge = 21;
        nitesh.EmpName = "Nitesh";
        nitesh.EmpDOJ = new DateTime(2016, 11, 21);*/
         
        foreach(var emp in emloyees)
        {
            Console.WriteLine("-----------------------------------------");
            Console.WriteLine("Employee ID: " + emp.EmpID);
            Console.WriteLine("Employee Age: " + emp.EmpName);
            Console.WriteLine("Employee Name: " + emp.EmpAge);
            Console.WriteLine("Employee DOJ: " + emp.EmpDOJ);

        }

        }
    }
Ex:8-property 8
using System;
using System.Collections.Generic;
class Employee
{
    public int EmpID { get; set; }
    public int EmpAge { get; set; }

    public string EmpName { get; set; }

    public DateTime EmpDOJ { get; set; }


}
    class Program
    {
        //svm double tab
        static void Main(string[] args)
        {

        //first way
        List<Employee> employees = new List<Employee>();

        Employee nitesh = new Employee { EmpID = 101, EmpName = "Nitesh", EmpAge = 21, EmpDOJ = new DateTime(2016, 11, 21) };
        Employee sakshi = new Employee { EmpID = 102, EmpName = "Sakshi", EmpAge = 22, EmpDOJ = new DateTime(2017, 12, 20) };

        employees.Add(nitesh);
        employees.Add(sakshi);

        //second way
        /*nitesh.EmpID = 101;
        nitesh.EmpAge = 21;
        nitesh.EmpName = "Nitesh";
        nitesh.EmpDOJ = new DateTime(2016, 11, 21);*/
         
        foreach(var emp in employees)
        {
            Console.WriteLine("-----------------------------------------");
            Console.WriteLine("Employee ID: " + emp.EmpID);
            Console.WriteLine("Employee Age: " + emp.EmpName);
            Console.WriteLine("Employee Name: " + emp.EmpAge);
            Console.WriteLine("Employee DOJ: " + emp.EmpDOJ);

        }

        }
    }
Ex:9-
        using System;   
       public class Employee
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }
    class Program
    {
        static void Main()
        {
            Employee emp = new Employee();
            emp.FirstName = "Steve";
            emp.LastName = "Smith";
            Console.WriteLine("Employee Full Name : {0} {1}", emp.FirstName, emp.LastName);
            Console.ReadKey();
        }
    }
o/p-
Employee Full Name : Steve Smith
Ex:9-
public class Employee
    {
        public int EmployeeId { get; set; }
        private string name { get; set; }
        private int salary { get; set; }
        public void SetName(string empName)
        {
            name = empName;
        }
        public string GetName()
        {
            return name;
        }
        public void SetSalary(int empSalary)
        {
            salary = empSalary;
        }
        public int GetSalary()
        {
            return salary;
        }
    }
class Program
    {
        static void Main(string[] args)
        {
            Employee emp = new Employee();
            //following line will give you error 
            //emp.name = "Steve";
            emp.SetName("Steve");
            //following line will give you error 
            //emp.salary = 10000 
            emp.SetSalary(10000);
            Console.WriteLine("Employee Name : {0} , Salary :  {1}", emp.GetName(), emp.GetSalary());
            Console.ReadKey();
        }
    }
o/p-
Employee Name : Steve , Salary :  10000


