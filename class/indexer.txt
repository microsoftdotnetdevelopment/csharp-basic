Indexers which are used for treating an object as an array.
Indexers are always created with this keyword.
Parameterized property are called indexer.
Indexers are implemented through get and set accessors for the [ ] operator.
ref and out parameter modifiers are not permitted in indexer.
The formal parameter list of an indexer corresponds to that of a method and at least one parameter should be specified.
Indexer is an instance member so can't be static but property can be static.
Indexers are used on group of elements.
Indexer is identified by its signature where as a property is identified it's name.
Indexers are accessed using indexes where as properties are accessed by names.
Indexer can be overloaded.
Ex:1-

using System;
 
namespace Indexer_example1
{
    class Program
    {
        class IndexerClass
        {
            private string[] names = new string[10];
 
            public string this[int i]
            {
                get
                {
                    return names[i];
                }
                set
                {
                    names[i] = value;
                }
            }
        }
 
        static void Main(string[] args)
        {
            IndexerClass Team = new IndexerClass();
            Team[0] = "Rocky";
            Team[1] = "Teena";
            Team[2] = "Ana";
            Team[3] = "Victoria";
            Team[4] = "Yani";
            Team[5] = "Mary";
            Team[6] = "Gomes";
            Team[7] = "Arnold";
            Team[8] = "Mike";
            Team[9] = "Peter";
 
            for (int i = 0; i < 10; i++)
            {
                Console.WriteLine(Team[i]);
            }
            Console.ReadKey();
        }
    }
}