Static Constructor
When a constructor is created as static, it will be invoked only once for all of instances of the class and it is invoked during the creation of the first instance of the class or the first reference to a static member in the class. 
A static constructor is used to initialize static fields of the class and to write the code that needs to be executed only once.
A static constructor is used to initialize any static data, or to perform a particular action that needs performed once only. 
A static constructor does not take access modifiers or have parameters.
A static constructor is called automatically to initialize the class before the first instance is created or any static members are referenced.
A static constructor cannot be called directly.
Static constructor will not accept any parameters because it is automatically called by CLR.
The user has no control on when the static constructor is executed in the program.
A typical use of static constructors is when the class is using a log file and the constructor is used to write entries to this file.
Static constructor is called only once before first instance of the class is created.
 It runs irrespective of the instantiation being done by parameterized or parameterless constructor
Ex-1:-
using System;
namespace ConsoleApplication3
{
    class Sample
    {
        public string param1, param2;
        static Sample()
        {
            Console.WriteLine("Static Constructor");
        }
        public Sample()
        {
            param1 = "Sample";
            param2 = "Instance Constructor";
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            // Here Both Static and instance constructors are invoked for first instance
            Sample obj = new Sample();
            Console.WriteLine(obj.param1 + " " + obj.param2);
            // Here only instance constructor will be invoked
            Sample obj1 = new Sample();
            Console.WriteLine(obj1.param1 + " " + obj1.param2);
            Console.ReadLine();
        }
    }
}

o/p-
Static Constructor
Sample Instance Constructor
Sample Instance Constructor
Ex:2-
using System;
using System.Threading;
namespace CheezyCodeApp
{
    class Application
    {
        //static variables
        private static DateTime startedAt;
        private static int instanceCount;
        //property to set current time at instance creation
        private DateTime CurrentTime { get; set; }

        //Static Constructor
        static Application()
        {
            //setting static variable
            instanceCount = 0;
            startedAt = DateTime.Now;
            Console.WriteLine("Application Started at " + startedAt);
        }

        public Application()
        {
            CurrentTime = DateTime.Now;
            instanceCount++;
            Console.WriteLine("Instance " + instanceCount + " created at " + CurrentTime);
        }


    }
    class Program
    {
        static void Main(string[] args)
        {
            Application app = new Application();
            Thread.Sleep(1000);
            Application app1 = new Application();
            Thread.Sleep(1000);
            Application app2 = new Application();
            Console.ReadLine();


            //Outputs
            //Application Started at 08/08/2016 22:39:16
            //Instance 1 created at 08/08/2016 22:39:16
            //Instance 2 created at 08/08/2016 22:39:17
            //Instance 3 created at 08/08/2016 22:39:18

        }
    }
}