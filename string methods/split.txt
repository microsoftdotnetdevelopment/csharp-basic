string n = “df.vb.gh”;
string[] detail = n.Split(‘.’);
foreach(string s in detail)
{
Console.WriteLine(s);
}
------------------------------
        string str = null;
        string[] strArr = null;
        int count = 0;
        str = "CSharp split test";
        char[] splitchar = { ' ' };
        strArr = str.Split(splitchar);
        for (count = 0; count <= strArr.Length - 1; count++)
        {
            Console.WriteLine(strArr[count]);
        }
---------------------
using regular expressions:-
        string str = "one\n   \ntwo\n   \nthree\n   \n   \nfour";
        string[] result = Regex.Split(str, "\n\\s*");
        for (int i = 0; i < result.Length; i++)
            Console.WriteLine(result[i]);
-------------------------
string input = "one)(two)(three)(four)(five";
        string[] result = input.Split(new string[] { ")(" }, StringSplitOptions.None);
        foreach (string s in result)
            Console.WriteLine(s);
----------------------------------
for multiple characters:-
string input = "one)(two)(three)(four)(five"; 
string[] result = Regex.Split(input, @"\)\(");
 foreach (string s in result) 
  Console.WriteLine(s); 
------------------------------
string test = "One\nTwo\r\nThree\nFour\n";
 string[] result = test.Split(new string[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries); 
foreach (string s in result)  
 Console.WriteLine(s); 
-----------------------
string test = "One\r\nTwo\r\nThree\r\nFour";
 string[] result = test.Split(new string[] { Environment.NewLine }, StringSplitOptions.None);
 foreach (string s in result)
   Console.WriteLine(s);
-------------------
string myStrA = "one two   three    four     five";
 string[] result = myStrA.Split(new char[0], StringSplitOptions.RemoveEmptyEntries);
foreach (string s in result) 
Console.WriteLine(s);
 